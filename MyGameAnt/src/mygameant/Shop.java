/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mygameant;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Miklos Bolarde
 */
public class Shop extends javax.swing.JFrame {

    /**
     * Creates new form Shop
     */
    public Shop() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        coin = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        jLabel10.setText("15 points");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setText("Username :");

        coin.setText("0");

        jLabel2.setText("Coins : ");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mummy (1).png"))); // NOI18N
        jLabel4.setText("jLabel3");

        btn1.setText("Buy");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setText("Buy");
        btn2.setToolTipText("");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setText("Buy");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setText("Buy");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jLabel7.setText("10 points");

        jLabel8.setText("20 points");

        jLabel9.setText("15 points");

        jLabel11.setText("25 points");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pirate (1).png"))); // NOI18N
        jLabel12.setText("jLabel3");

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Grod (1).png"))); // NOI18N
        jLabel13.setText("jLabel3");

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ghost (1).png"))); // NOI18N
        jLabel14.setText("jLabel3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(47, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(coin, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel7))
                            .addComponent(btn1))
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel9))
                            .addComponent(btn2))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(jLabel8))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(btn3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel11))
                            .addComponent(btn4))
                        .addGap(80, 80, 80))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(coin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn1)
                    .addComponent(btn2)
                    .addComponent(btn3)
                    .addComponent(btn4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        String prevPlayerList="",arrPlayer="",coins="";
        String player = username.getText();
        boolean hasItem = false;
        DataBase connect = new DataBase();
        GamePanel gp = new GamePanel();
        try {
                Connection con = connect.connection();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM `user` WHERE username='"+player+"'");
               
                while(rs.next()){
                    prevPlayerList = rs.getString("playerList");
                    arrPlayer = rs.getString("playerList");
                    coins = rs.getString("points");
                }
        }catch(Exception e){
            System.out.println("Error! "+e);
        }
        String[] arrPlayerList = arrPlayer.split(",");
        for(String players : arrPlayerList){
          if(players.equals("Mummy")){
            hasItem = true;
            break;
          }
        }
        if(Integer.parseInt(coins)>=15){
            if(hasItem==false){
                try{
                    Connection con = connect.connection();
                    Statement st = con.createStatement();
                    st.executeUpdate("UPDATE user SET playerList='"+prevPlayerList+",Mummy' WHERE username='"+player+"'");
                    st.executeUpdate("UPDATE user SET points=points-"+15+" WHERE username='"+player+"'");
                }catch(Exception e){
                    System.out.println("Error! "+e);
                }
                JOptionPane.showMessageDialog(rootPane, "Item has been Bought!", "Purchesed Succesful", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "You have this Item!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "You Dont have enough Coins!!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        String prevPlayerList="",arrPlayer="",coins="";
        String player = username.getText();
        boolean hasItem = false;
        DataBase connect = new DataBase();
        GamePanel gp = new GamePanel();
        try {
                Connection con = connect.connection();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM `user` WHERE username='"+player+"'");
               
                while(rs.next()){
                    prevPlayerList = rs.getString("playerList");
                    arrPlayer = rs.getString("playerList");
                    coins = rs.getString("points");
                }
        }catch(Exception e){
            System.out.println("Error! "+e);
        }
        String[] arrPlayerList = arrPlayer.split(",");
        for(String players : arrPlayerList){
          if(players.equals("Undead")){
            hasItem = true;
            break;
          }
        }
        if(Integer.parseInt(coins)>=25){
            if(hasItem==false){
                try{
                    Connection con = connect.connection();
                    Statement st = con.createStatement();
                    st.executeUpdate("UPDATE user SET playerList='"+prevPlayerList+",Undead' WHERE username='"+player+"'");
                    st.executeUpdate("UPDATE user SET points=points-"+25+" WHERE username='"+player+"'");
                }catch(Exception e){
                    System.out.println("Error! "+e);
                }
                JOptionPane.showMessageDialog(rootPane, "Item has been Bought!", "Purchesed Succesful", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "You have this Item!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "You Dont have enough Coins!!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        UserUI ui = new UserUI();
        String coins = coin.getText(),user = username.getText();
        ui.playerName.setText(user);
        ui.pointsText.setText(coins);
        ui.setVisible(true);
        dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        String prevPlayerList="",arrPlayer="",coins="";
        String player = username.getText();
        boolean hasItem = false;
        DataBase connect = new DataBase();
        GamePanel gp = new GamePanel();
        try {
                Connection con = connect.connection();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM `user` WHERE username='"+player+"'");
               
                while(rs.next()){
                    prevPlayerList = rs.getString("playerList");
                    arrPlayer = rs.getString("playerList");
                    coins = rs.getString("points");
                }
        }catch(Exception e){
            System.out.println("Error! "+e);
        }
        String[] arrPlayerList = arrPlayer.split(",");
        for(String players : arrPlayerList){
          if(players.equals("Brog")){
            hasItem = true;
            break;
          }
        }
        if(Integer.parseInt(coins)>=10){
            if(hasItem==false){
                try{
                    Connection con = connect.connection();
                    Statement st = con.createStatement();
                    st.executeUpdate("UPDATE user SET playerList='"+prevPlayerList+",Brog' WHERE username='"+player+"'");
                    st.executeUpdate("UPDATE user SET points=points-"+10+" WHERE username='"+player+"'");
                }catch(Exception e){
                    System.out.println("Error! "+e);
                }
                JOptionPane.showMessageDialog(rootPane, "Item has been Bought!", "Purchesed Succesful", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "You have this Item!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "You Dont have enough Coins!!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
                String prevPlayerList="",arrPlayer="",coins="";
        String player = username.getText();
        boolean hasItem = false;
        DataBase connect = new DataBase();
        GamePanel gp = new GamePanel();
        try {
                Connection con = connect.connection();
                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM `user` WHERE username='"+player+"'");
               
                while(rs.next()){
                    prevPlayerList = rs.getString("playerList");
                    arrPlayer = rs.getString("playerList");
                    coins = rs.getString("points");
                }
        }catch(Exception e){
            System.out.println("Error! "+e);
        }
        String[] arrPlayerList = arrPlayer.split(",");
        for(String players : arrPlayerList){
          if(players.equals("Pirate")){
            hasItem = true;
            break;
          }
        }
        if(Integer.parseInt(coins)>20){
            if(hasItem==false){
                try{
                    Connection con = connect.connection();
                    Statement st = con.createStatement();
                    st.executeUpdate("UPDATE user SET playerList='"+prevPlayerList+",Pirate' WHERE username='"+player+"'");
                    st.executeUpdate("UPDATE user SET points=points-"+20+" WHERE username='"+player+"'");
                }catch(Exception e){
                    System.out.println("Error! "+e);
                }
                JOptionPane.showMessageDialog(rootPane, "Item has been Bought!", "Purchesed Succesful", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "You have this Item!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "You Dont have enough Coins!!", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Shop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Shop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    public javax.swing.JLabel coin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
